
led-on-pd13.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001a4  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800032c  08000334  00001334  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800032c  0800032c  00001334  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  0800032c  0800032c  00001334  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  0800032c  08000334  00001334  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800032c  0800032c  0000132c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000330  08000330  00001330  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001334  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001334  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001334  2**0
                  CONTENTS, READONLY
 13 .comment      00000026  00000000  00000000  00001364  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000200  00000000  00000000  0000138a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00000161  00000000  00000000  0000158a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000068  00000000  00000000  000016f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 0000002c  00000000  00000000  00001758  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00000e46  00000000  00000000  00001784  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00000234  00000000  00000000  000025ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000039a0  00000000  00000000  000027fe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000058  00000000  00000000  000061a0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000006a  00000000  00000000  000061f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loclists 00000065  00000000  00000000  00006262  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <deregister_tm_clones>:
 8000188:	4803      	ldr	r0, [pc, #12]	@ (8000198 <deregister_tm_clones+0x10>)
 800018a:	4b04      	ldr	r3, [pc, #16]	@ (800019c <deregister_tm_clones+0x14>)
 800018c:	4283      	cmp	r3, r0
 800018e:	d002      	beq.n	8000196 <deregister_tm_clones+0xe>
 8000190:	4b03      	ldr	r3, [pc, #12]	@ (80001a0 <deregister_tm_clones+0x18>)
 8000192:	b103      	cbz	r3, 8000196 <deregister_tm_clones+0xe>
 8000194:	4718      	bx	r3
 8000196:	4770      	bx	lr
 8000198:	20000000 	.word	0x20000000
 800019c:	20000000 	.word	0x20000000
 80001a0:	00000000 	.word	0x00000000

080001a4 <register_tm_clones>:
 80001a4:	4805      	ldr	r0, [pc, #20]	@ (80001bc <register_tm_clones+0x18>)
 80001a6:	4b06      	ldr	r3, [pc, #24]	@ (80001c0 <register_tm_clones+0x1c>)
 80001a8:	1a1b      	subs	r3, r3, r0
 80001aa:	0fd9      	lsrs	r1, r3, #31
 80001ac:	eb01 01a3 	add.w	r1, r1, r3, asr #2
 80001b0:	1049      	asrs	r1, r1, #1
 80001b2:	d002      	beq.n	80001ba <register_tm_clones+0x16>
 80001b4:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <register_tm_clones+0x20>)
 80001b6:	b103      	cbz	r3, 80001ba <register_tm_clones+0x16>
 80001b8:	4718      	bx	r3
 80001ba:	4770      	bx	lr
 80001bc:	20000000 	.word	0x20000000
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c06      	ldr	r4, [pc, #24]	@ (80001e4 <__do_global_dtors_aux+0x1c>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b943      	cbnz	r3, 80001e2 <__do_global_dtors_aux+0x1a>
 80001d0:	f7ff ffda 	bl	8000188 <deregister_tm_clones>
 80001d4:	4b04      	ldr	r3, [pc, #16]	@ (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	b113      	cbz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d8:	4804      	ldr	r0, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x24>)
 80001da:	f3af 8000 	nop.w
 80001de:	2301      	movs	r3, #1
 80001e0:	7023      	strb	r3, [r4, #0]
 80001e2:	bd10      	pop	{r4, pc}
 80001e4:	20000000 	.word	0x20000000
 80001e8:	00000000 	.word	0x00000000
 80001ec:	08000314 	.word	0x08000314

080001f0 <frame_dummy>:
 80001f0:	b508      	push	{r3, lr}
 80001f2:	4b04      	ldr	r3, [pc, #16]	@ (8000204 <frame_dummy+0x14>)
 80001f4:	b11b      	cbz	r3, 80001fe <frame_dummy+0xe>
 80001f6:	4904      	ldr	r1, [pc, #16]	@ (8000208 <frame_dummy+0x18>)
 80001f8:	4804      	ldr	r0, [pc, #16]	@ (800020c <frame_dummy+0x1c>)
 80001fa:	f3af 8000 	nop.w
 80001fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8000202:	e7cf      	b.n	80001a4 <register_tm_clones>
 8000204:	00000000 	.word	0x00000000
 8000208:	20000004 	.word	0x20000004
 800020c:	08000314 	.word	0x08000314

08000210 <__libc_init_array>:
 8000210:	b570      	push	{r4, r5, r6, lr}
 8000212:	4b0f      	ldr	r3, [pc, #60]	@ (8000250 <__libc_init_array+0x40>)
 8000214:	4d0f      	ldr	r5, [pc, #60]	@ (8000254 <__libc_init_array+0x44>)
 8000216:	42ab      	cmp	r3, r5
 8000218:	eba3 0605 	sub.w	r6, r3, r5
 800021c:	d007      	beq.n	800022e <__libc_init_array+0x1e>
 800021e:	10b6      	asrs	r6, r6, #2
 8000220:	2400      	movs	r4, #0
 8000222:	f855 3b04 	ldr.w	r3, [r5], #4
 8000226:	3401      	adds	r4, #1
 8000228:	4798      	blx	r3
 800022a:	42a6      	cmp	r6, r4
 800022c:	d8f9      	bhi.n	8000222 <__libc_init_array+0x12>
 800022e:	f000 f871 	bl	8000314 <_init>
 8000232:	4d09      	ldr	r5, [pc, #36]	@ (8000258 <__libc_init_array+0x48>)
 8000234:	4b09      	ldr	r3, [pc, #36]	@ (800025c <__libc_init_array+0x4c>)
 8000236:	1b5e      	subs	r6, r3, r5
 8000238:	42ab      	cmp	r3, r5
 800023a:	ea4f 06a6 	mov.w	r6, r6, asr #2
 800023e:	d006      	beq.n	800024e <__libc_init_array+0x3e>
 8000240:	2400      	movs	r4, #0
 8000242:	f855 3b04 	ldr.w	r3, [r5], #4
 8000246:	3401      	adds	r4, #1
 8000248:	4798      	blx	r3
 800024a:	42a6      	cmp	r6, r4
 800024c:	d8f9      	bhi.n	8000242 <__libc_init_array+0x32>
 800024e:	bd70      	pop	{r4, r5, r6, pc}
 8000250:	0800032c 	.word	0x0800032c
 8000254:	0800032c 	.word	0x0800032c
 8000258:	0800032c 	.word	0x0800032c
 800025c:	08000330 	.word	0x08000330

08000260 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000260:	b480      	push	{r7}
 8000262:	b085      	sub	sp, #20
 8000264:	af00      	add	r7, sp, #0
	// the base address of RCC: `0x40023800`
	// Address offset: 0x30
	// used to turn on the clock
	uint32_t *pClockControlRegister = (uint32_t*) (0x40023800 + 0x30);
 8000266:	4b13      	ldr	r3, [pc, #76]	@ (80002b4 <main+0x54>)
 8000268:	60fb      	str	r3, [r7, #12]
	// the base address of GPIOD mode register: `0x40020C00`
	// Address offset: 0x00
	// used to control the mode of GPIOD
	uint32_t *pGPIODModeRegister = (uint32_t*) (0x40020C00 + 0x00);
 800026a:	4b13      	ldr	r3, [pc, #76]	@ (80002b8 <main+0x58>)
 800026c:	60bb      	str	r3, [r7, #8]
	// the base address of GPIOD output data register: `0x40020C00`
	// Address offset: 0x14
	// used to write to the pin
	uint32_t *pGPIODOutputRegister = (uint32_t*) (0x40020C00 + 0x14);
 800026e:	4b13      	ldr	r3, [pc, #76]	@ (80002bc <main+0x5c>)
 8000270:	607b      	str	r3, [r7, #4]

	// step 1. enable the clock for GPIOD peripheral in AHB1ENR
	*pClockControlRegister |= 1 << 3;     // the third bit mask!
 8000272:	68fb      	ldr	r3, [r7, #12]
 8000274:	681b      	ldr	r3, [r3, #0]
 8000276:	f043 0208 	orr.w	r2, r3, #8
 800027a:	68fb      	ldr	r3, [r7, #12]
 800027c:	601a      	str	r2, [r3, #0]

	// step 2. configure the  GPIOD_MODER to output mode for pd13
	// so 26th and 27th bits
	// a. clear the 26th and 27th bit
	*pGPIODModeRegister &= ~(1 << 26); // clear 26th bit
 800027e:	68bb      	ldr	r3, [r7, #8]
 8000280:	681b      	ldr	r3, [r3, #0]
 8000282:	f023 6280 	bic.w	r2, r3, #67108864	@ 0x4000000
 8000286:	68bb      	ldr	r3, [r7, #8]
 8000288:	601a      	str	r2, [r3, #0]
	*pGPIODModeRegister &= ~(1 << 27);  // clear 27th bit
 800028a:	68bb      	ldr	r3, [r7, #8]
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	f023 6200 	bic.w	r2, r3, #134217728	@ 0x8000000
 8000292:	68bb      	ldr	r3, [r7, #8]
 8000294:	601a      	str	r2, [r3, #0]
	// b. set the 26th bit
	*pGPIODModeRegister |= (1 << 26);
 8000296:	68bb      	ldr	r3, [r7, #8]
 8000298:	681b      	ldr	r3, [r3, #0]
 800029a:	f043 6280 	orr.w	r2, r3, #67108864	@ 0x4000000
 800029e:	68bb      	ldr	r3, [r7, #8]
 80002a0:	601a      	str	r2, [r3, #0]

	// step 3. SET the 13th pin of the GPIO register
	*pGPIODOutputRegister |= (1 << 13);
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	681b      	ldr	r3, [r3, #0]
 80002a6:	f443 5200 	orr.w	r2, r3, #8192	@ 0x2000
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	601a      	str	r2, [r3, #0]


    /* Loop forever */
	for(;;);
 80002ae:	bf00      	nop
 80002b0:	e7fd      	b.n	80002ae <main+0x4e>
 80002b2:	bf00      	nop
 80002b4:	40023830 	.word	0x40023830
 80002b8:	40020c00 	.word	0x40020c00
 80002bc:	40020c14 	.word	0x40020c14

080002c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c0:	480d      	ldr	r0, [pc, #52]	@ (80002f8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002c2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002c4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002c8:	480c      	ldr	r0, [pc, #48]	@ (80002fc <LoopForever+0x6>)
  ldr r1, =_edata
 80002ca:	490d      	ldr	r1, [pc, #52]	@ (8000300 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002cc:	4a0d      	ldr	r2, [pc, #52]	@ (8000304 <LoopForever+0xe>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d0:	e002      	b.n	80002d8 <LoopCopyDataInit>

080002d2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002d2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002d6:	3304      	adds	r3, #4

080002d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002d8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002da:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002dc:	d3f9      	bcc.n	80002d2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002de:	4a0a      	ldr	r2, [pc, #40]	@ (8000308 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e0:	4c0a      	ldr	r4, [pc, #40]	@ (800030c <LoopForever+0x16>)
  movs r3, #0
 80002e2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e4:	e001      	b.n	80002ea <LoopFillZerobss>

080002e6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002e6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002e8:	3204      	adds	r2, #4

080002ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002ec:	d3fb      	bcc.n	80002e6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ee:	f7ff ff8f 	bl	8000210 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002f2:	f7ff ffb5 	bl	8000260 <main>

080002f6 <LoopForever>:

LoopForever:
  b LoopForever
 80002f6:	e7fe      	b.n	80002f6 <LoopForever>
  ldr   r0, =_estack
 80002f8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000300:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000304:	08000334 	.word	0x08000334
  ldr r2, =_sbss
 8000308:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800030c:	2000001c 	.word	0x2000001c

08000310 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000310:	e7fe      	b.n	8000310 <ADC_IRQHandler>
	...

08000314 <_init>:
 8000314:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000316:	bf00      	nop
 8000318:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800031a:	bc08      	pop	{r3}
 800031c:	469e      	mov	lr, r3
 800031e:	4770      	bx	lr

08000320 <_fini>:
 8000320:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000322:	bf00      	nop
 8000324:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000326:	bc08      	pop	{r3}
 8000328:	469e      	mov	lr, r3
 800032a:	4770      	bx	lr
